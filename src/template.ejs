<!DOCTYPE html>
<html lang="en">
  <head> 
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" crossorigin="anonymous">

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous">

    <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/k6-reporter/main/assets/icon.png" type="image/png">

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Digital West Functional Test Report : <%= title %></title>
    <style>
      body {
        margin: 1rem;
      }
      footer { 
        float: right;
        font-size: 0.8rem;
        color: #777;
      }
      footer a {
        text-decoration: none;
        color: #777;
      }
      .failed {
        background-color: #ff6666 !important;
      }     
      .warning {
        background-color: #ecd864 !important;
      }
      .good {
        background-color: #3abe3a !important;
      }   
      td.failed {
        font-weight: bold;
      }
      h2 {
        padding-bottom: 4px;
        border-bottom: solid 3px #cccccc;
      }
      .tabs {
        display: flex;
        flex-wrap: wrap; 
      }
      .tabs label {
        order: 1; 
        display: block;
        padding: 1rem 2rem;
        margin-right: 0.2rem;
        cursor: pointer;
        color: #666;
        background: #ddd;
        font-weight: bold;
        font-size: 1.2rem;
        flex: 1 1;
        transition: background ease 0.2s;
        border-top-left-radius: 0.3rem;
        border-top-right-radius: 0.3rem;
        border-color: #ccc;
        border-style: solid;
        border-width: 2px 2px 0px;
        box-shadow: inset 0px -3px 7px -1px rgba(0,0,0,0.33);
      }
      .tabs .tab {
        order: 99;
        flex-grow: 1;
        width: 100%;
        display: none;
        padding: 1rem;
        background: #fff;
      }
      .tabs input[type="radio"] {
        display: none;
      }
      .tabs input[type="radio"]:checked + label {
        background: #fff;
        box-shadow: none;
        color: #000;
      }
      .tabs input[type="radio"]:checked + label + .tab {
        display: block;
      }
      .box {
        flex: 1 1;
        border-radius: 0.3rem;
        background-color: #3abe3a;
        margin: 1rem;
        padding: 0.5rem;
        font-size: 2vw; 
        box-shadow: 0px 4px 7px -1px rgba(0,0,0,0.49);
        color: white;
        position: relative;
        overflow: hidden;
      }
      .box h4 {
        margin: 0;
        padding-bottom: 0.5rem;
        text-align: center;
        position: relative;
        z-index: 50;
      }
      .row {
        display: flex;
      }
      .row div {
        flex: 1 1;
        text-align: center;
        margin-bottom: 0.5rem;
      }
      .bignum {
        position: relative;
        font-size: min(6vw, 80px);
        z-index: 20;
      }
      table {
        font-size: min(2vw, 22px);
        width: 100%;
      }
      .icon { 
        position: absolute;
        top: 60%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #0000002d;
        font-size: 8vw;
        z-index: 1;
      }
      .metricbox {
        background-color: #5697e2;
        font-size: 3vw;
        height: auto;
      }
      .metricbox .row {
        position: relative;
        z-index: 20;
      }
      .table-custom {
        font-size: 1.0rem
      }
      th {
        vertical-align: middle;
      }

    </style>
  </head>

  <body>
    
      <svg width="100" viewBox="0 0 306 72" fill="none" class="logo" >
        <style type="text/css">
          .st0{fill:#DA291C;}
        </style>
        <g>
          <g>
            <path class="st0" d="M55.5,18.9c3.4,3.9,6.3,9.8,6.3,17.1c0,11.9-7.2,19.2-14.9,19.2c-3.8,0-7.5-1.3-9.7-3
              c12.3-5.2,19.5-16,19.5-25.1C56.7,23.5,56.1,20.8,55.5,18.9 M18.3,15.9c1.9-0.6,4.7-1.3,8.1-1.3c9.2,0,19.9,7.2,25.1,19.5
              c1.7-2.2,3-5.9,3-9.7c0-7.7-7.2-14.9-19.2-14.9C28,9.6,22.2,12.6,18.3,15.9 M15.3,53.1C14.7,51.2,14,48.5,14,45
              c0-9.2,7.2-19.9,19.5-25.1c-2.2-1.7-5.9-3-9.7-3C16.2,16.9,9,24.1,9,36C9,43.4,11.9,49.2,15.3,53.1 M52.5,56.1
              c-1.9,0.6-4.7,1.3-8.1,1.3c-9.2,0-19.9-7.2-25.1-19.5c-1.7,2.2-3,5.9-3,9.7c0,7.7,7.2,14.9,19.2,14.9
              C42.7,62.4,48.6,59.4,52.5,56.1"/>
            <g>
              <path class="st0" d="M113.6,36c0-12.1,7-20.4,18.5-20.4S150.6,24,150.6,36c0,12.2-7.2,20.3-18.5,20.3
                C120.6,56.4,113.6,48.2,113.6,36 M143.1,36c0-8.8-3.6-14.3-11-14.3c-7.2,0-11,5.2-11,14.3c0,9,3.8,14.2,11,14.2
                C139.3,50.3,143.1,45,143.1,36"/>
              <polyline class="st0" points="202.1,16.1 202.1,55.9 226.6,55.9 226.6,50 209.3,50 209.3,38.6 224.6,38.6 224.6,32.7 209.3,32.7 
                209.3,22 224.6,22 226.6,16.1 202.1,16.1 			"/>
              <path class="st0" d="M179.3,34.4l-1.9,5.7h6.1V49c-1.5,0.7-3.2,1.2-5.8,1.2c-8.4,0-12.6-5.6-12.6-14.2c0-8.4,4.2-14.4,12.8-14.4
                c3.2,0,6.3,1,9,2.7l2-6.1c-3.1-1.6-7.3-2.7-11.5-2.7c-12.1,0-19.8,8.9-19.8,20.9c0,11.4,6.8,19.8,19.6,19.8
                c5.4,0,9.9-1.4,13.5-3.2V34.4l0,0H179.3z"/>
              <path class="st0" d="M80.1,16.1h12c11,0,14.4,6.8,14.4,12.1c0,7.4-5.6,10.3-7.3,10.9v0.3c0.8,0.2,2.4,1,4.6,4.9l6.6,11.6h-8.1
                l-5.7-10c-2.3-4.1-3.2-5.4-6.9-5.4h-2.5V56h-7.1V16.1 M91.9,34.5c6.1,0,7.3-3.8,7.3-6.3c0-2.1-1.1-6.2-7.3-6.2h-4.7v12.4
                L91.9,34.5L91.9,34.5z"/>
              <path class="st0" d="M236.8,16.1h12c11,0,14.4,6.8,14.4,12.1c0,7.4-5.6,10.3-7.3,10.9v0.3c0.8,0.2,2.4,1,4.6,4.9l6.6,11.6H259
                l-5.7-10c-2.3-4.1-3.2-5.4-6.9-5.4h-2.5V56h-7.1V16.1 M248.6,34.5c6.1,0,7.3-3.8,7.3-6.3c0-2.1-1.1-6.2-7.3-6.2h-4.7v12.4
                L248.6,34.5L248.6,34.5z"/>
              <path class="st0" d="M279.8,26.2c0-3.1,3-4.5,6.3-4.5c4.5,0,7.9,1.5,8.6,1.7v-6.6c-0.6-0.2-3.6-1.2-9.3-1.2
                c-8.7,0-13.3,5.1-13.3,11c0,5.8,4.7,8.8,8.7,10.9c0.9,0.5,2,1.1,2.8,1.5c3.3,1.7,5.7,3.1,5.7,6.1c0,3.4-3.3,5.1-6.6,5.1
                c-5.7,0-9.1-2.1-9.7-2.4l-1.9,5.9c0.6,0.3,5.1,2.6,11.7,2.6c8.1,0,14.2-4.8,14.2-11.8c0-5-3.4-8.2-9-11.2c-1-0.5-1.7-0.9-2.6-1.4
                C282.2,30.3,279.8,29,279.8,26.2z"/>
            </g>
          </g>
        </g>
      </svg> 
      <h2>  &nbsp;Digital West Functional Test Report
    </h2>
    <h1><%= title %></h1>
    <em>Test Run Completed at <%= reportDate %></em>

    <div class="row">
      <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) {
        numberPass = data.metrics.checks.values.passes
        numberFail = data.metrics.checks.values.fails
        passRate = 100 * (parseFloat(numberPass) / parseFloat(numberPass + numberFail))
      } %>
      
      <div class="box">
        <i class="fas fa-globe icon"></i>
        <h4>Total Checks</h4>
        <div class="bignum"><%= numberPass + numberFail %></div>
      </div>
      <div class="box <% if(passRate < 80) { %> failed <% } %>">
        <i class="fas fa-chart-bar icon"></i>
        <h4>Pass Rate %</h4>
        <div class="bignum"><%= passRate %></div> 
      </div>
      <div class="box <% if(numberFail > 0) { %> warning <% } %>">
        <i class="fas fa-eye icon"></i>
        <h4>Passed Checks</h4>
        <div class="bignum"><%= numberPass %></div>
      </div>
      <div class="box <% if(numberFail > 0) { %> failed <% } %>">
        <i class="fas fa-eye icon"></i>
        <h4>Failed Checks</h4>
        <div class="bignum"><%= numberFail %></div>
      </div>
    </div>

    <br>
    
    <div class="tabs">

      <input type="radio" name="tabs" id="tabone" checked="checked">
      <label for="tabone"><i class="fas fa-tasks"></i> Checks & Groups</label>
      <div class="tab">
        <% testSuite = '' 
           subName = ''
           for(const result of results) { %>
           <% if(testSuite != result.testSuite) { 
            testSuite = result.testSuite %>
          <h2><%= result.testSuite %></h2>
          <% } %>
          <% 
            if(subName != result.name.split('::')[0]) {
              subName = result.name.split('::')[0]
          %>
          <h3><%= subName %></h3>
          <% } %>
            <table class="table-custom pure-table pure-table-striped" style="width: 100%">
              <thead>
                <tr>
                  <th><%- result.name.split('::').slice(-1) %> </th>
                  <th>Passes</th>
                  <th>Failures</th>
                </tr>
              </thead>
              <% for(const check of result.checks) { %>
              <tr class="checkDetails  <% if(check.fails > 0) { %>failed<% } %>">
                <td width="50%"><%= check.name %></td><td><%= check.passes %></td><td><%= check.fails %></td>
              </tr>
              <% } %>
            </table>
          <br>
        <% } %>

      </div> 
      <!-- ---- end tab ---- -->

      <input type="radio" name="tabs" id="tabtwo">
      <label for="tabtwo"><i class="fas fa-chart-line"></i> &nbsp; Other Stats</label>
      <div class="tab">
        <div class="row">
          <% if (data.metrics.checks) { %>
            <div class="box metricbox">
              <h4>Checks</h4>
              <i class="fas fa-eye icon"></i>
              <div class="row"><div>Passed</div><div><%= data.metrics.checks.values.passes %></div></div>
              <div class="row"><div>Failed</div><div><%= data.metrics.checks.values.fails %></div></div>
            </div>
          <% } %>

          <% if (data.metrics.iterations) { %>
            <div class="box metricbox">
              <h4>Iterations</h4>
              <i class="fas fa-redo icon"></i>
              <div class="row"><div>Total</div><div><%= data.metrics.iterations.values.count %></div></div>
              <div class="row"><div>Rate</div><div><%= data.metrics.iterations.values.rate.toFixed(2) %>/s</div></div>
            </div>
          <% } %>

          <div class="box metricbox">
            <h4>Virtual Users</h4>
            <i class="fas fa-user icon"></i>
            <div class="row"><div>Min</div><div><%= data.metrics.vus ? data.metrics.vus.values.min : 1 %></div></div>
            <div class="row"><div>Max</div><div><%= data.metrics.vus ? data.metrics.vus.values.max : 1 %></div></div>
          </div>
        </div>

        <div class="row">
          <div class="box metricbox">
            <h4>Requests</h4>
            <i class="fas fa-globe icon"></i>
            <div class="row"><div>Total</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.count %><% } %></div></div>
            <div class="row"><div>Rate</div><div><% if(data.metrics.http_reqs) { %><%= data.metrics.http_reqs.values.rate.toFixed(2) %>/s<% } %></div></div>
          </div>

          <div class="box metricbox">
            <h4>Data Received</h4>
            <i class="fas fa-cloud-download-alt icon"></i>
            <div class="row"><div>Total</div><div><%= (data.metrics.data_received.values.count/1000000).toFixed(2) %> MB</div></div>
            <div class="row"><div>Rate</div><div><%= (data.metrics.data_received.values.rate/1000000).toFixed(2) %> mB/s</div></div>
          </div>

          <div class="box metricbox">
            <h4>Data Sent</h4>
            <i class="fas fa-cloud-upload-alt icon"></i>
            <div class="row"><div>Total</div><div><%= (data.metrics.data_sent.values.count/1000000).toFixed(2) %> MB</div></div>
            <div class="row"><div>Rate</div><div><%= (data.metrics.data_sent.values.rate/1000000).toFixed(2) %> mB/s</div></div>
          </div>   
        </div>
      </div>  
      <!-- ---- end tab ---- -->     

      <input type="radio" name="tabs" id="tabthree">
      <label for="tabthree"><i class="far fa-clock"></i> &nbsp; Request Metrics</label>
      <div class="tab">
        <table class="pure-table pure-table-striped">
          <tbody>
            <thead>
              <tr>
                <th></th>
                <th>Count</th>
                <th>Rate</th>
                <th>Average</th>
                <th>Maximum</th>
                <th>Median</th> 
                <th>Minimum</th>
                <th>90th Percentile</th>
                <th>95th Percentile</th>
              </tr>
            </thead>
            
            <% function checkFailed(metric, valName) {
                if(!metric.thresholds) return ''
                for(thres in metric.thresholds) {
                  if(thres.includes(valName)) {
                    if(!metric.thresholds[thres].ok) return 'failed'
                    return 'good'
                  }
                }
              }

              for(metricName of standardMetrics) { 
                if(!data.metrics[metricName]) { continue }
                var metric = data.metrics[metricName] 
            %>
              <tr>
                <td><b><%= metricName %></b></td>

                <% if(metric.values.count) { %>
                  <td class="<%= checkFailed(metric, 'count') %>"><%= metric.values.count.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.rate) { %>
                  <td class="<%= checkFailed(metric, 'rate') %>"><%= metric.values.rate.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>
                
                <% if(metric.values.avg) { %>
                  <td class="<%= checkFailed(metric, 'avg') %>"><%= metric.values.avg.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.max) { %>
                  <td class="<%= checkFailed(metric, 'max') %>"><%= metric.values.max.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  

                <% if(metric.values.med) { %>
                  <td class="<%= checkFailed(metric, 'med') %>"><%= metric.values.med.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  
                
                <% if(metric.values.min) { %>
                  <td class="<%= checkFailed(metric, 'min') %>"><%= metric.values.min.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>   
                              
                <% if(metric.values['p(90)']) { %>
                  <td class="<%= checkFailed(metric, 'p(90)') %>"><%= metric.values['p(90)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values['p(95)']) { %>
                  <td class="<%= checkFailed(metric, 'p(95)') %>"><%= metric.values['p(95)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>
              </tr>
            <% } %>
          </tbody>
        </table>
        <br>

        <% 
          first = true 
          var sortedMetrics = {}
          Object.keys(data.metrics).sort().forEach(function(k) {
            sortedMetrics[k] = data.metrics[k]
          });
          for(metricName in sortedMetrics) {
            if(standardMetrics.includes(metricName) || otherMetrics.includes(metricName)) { continue }
            var metric = sortedMetrics[metricName] 
        %>
          <% if(first) { first = false %> <h2>Custom Metrics</h2> 
          <table class="pure-table pure-table-striped">
            <tbody>
              <thead>
                <tr>
                  <th></th>
                  <th>Count</th>
                  <th>Rate</th>
                  <th>Average</th>
                  <th>Maximum</th>
                  <th>Median</th> 
                  <th>Minimum</th>
                  <th>90th Percentile</th>
                  <th>95th Percentile</th>
                </tr>
              </thead>
              <% } %>
              <tr>
                <td><b><%= metricName %></b></td>

                <% if(metric.values.count) { %>
                  <td class="<%= checkFailed(metric, 'count') %>"><%= metric.values.count.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.rate) { %>
                  <td class="<%= checkFailed(metric, 'rate') %>"><%= metric.values.rate.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>
                
                <% if(metric.values.avg) { %>
                  <td class="<%= checkFailed(metric, 'avg') %>"><%= metric.values.avg.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values.max) { %>
                  <td class="<%= checkFailed(metric, 'max') %>"><%= metric.values.max.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  

                <% if(metric.values.med) { %>
                  <td class="<%= checkFailed(metric, 'med') %>"><%= metric.values.med.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>  
                
                <% if(metric.values.min) { %>
                  <td class="<%= checkFailed(metric, 'min') %>"><%= metric.values.min.toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>   
                              
                <% if(metric.values['p(90)']) { %>
                  <td class="<%= checkFailed(metric, 'p(90)') %>"><%= metric.values['p(90)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td>
                <% } %>

                <% if(metric.values['p(95)']) { %>
                  <td class="<%= checkFailed(metric, 'p(95)') %>"><%= metric.values['p(95)'].toFixed(2) %></td>
                <% } else { %>
                  <td>-</td> 
                <% } %>
              </tr>
              <% } %>
            </tbody>
          </table>
          <br>


        &nbsp;&nbsp; Note. All times are in milli-seconds
      </div> 
      <!-- ---- end tab ---- -->
    </div>
    <footer>K6 Reporter v<%= version %> - Ben Coleman 2021, <a href="https://github.com/benc-uk/k6-reporter">[GitHub]</a></footer>
  </body>
</html>
